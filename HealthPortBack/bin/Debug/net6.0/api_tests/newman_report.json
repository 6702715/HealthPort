{
  "collection": {
    "_": {
      "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
    },
    "item": [
      {
        "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
        "name": "Post new Item",
        "request": {
          "url": {
            "port": "{{PORT}}",
            "path": [
              "register"
            ],
            "host": [
              "{{HOST}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f245089d-bb91-4175-86d3-160a986c3a79",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Successful POST request\", function () {\r",
                "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                "});"
              ],
              "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
            }
          }
        ]
      },
      {
        "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
        "name": "Get Items",
        "request": {
          "url": {
            "port": "{{PORT}}",
            "path": [
              "register"
            ],
            "host": [
              "{{HOST}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status test\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Response time is less than 200ms\", () => {\r",
                "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Content test\", function () {\r",
                "    var lnft = pm.variables.get('lastNameForTest');\r",
                "    pm.expect(pm.response.text()).to.include(lnft);\r",
                "});"
              ],
              "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
            }
          }
        ]
      },
      {
        "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
        "name": "Get course",
        "request": {
          "url": {
            "port": "{{PORT}}",
            "path": [
              "getcourse"
            ],
            "host": [
              "{{HOST}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status test\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Response time is less than 200ms\", () => {\r",
                "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Test currency value\", function () {\r",
                "     var jsondata = pm.response.json();\r",
                "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                "});"
              ],
              "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
            }
          }
        ]
      },
      {
        "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
        "name": "Post new feedback",
        "request": {
          "url": {
            "port": "{{PORT}}",
            "path": [
              "feedback"
            ],
            "host": [
              "{{HOST}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status test\", function () {\r",
                "    pm.response.to.have.status(201);\r",
                "});\r",
                "\r",
                "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                "});"
              ],
              "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
              "type": "text/javascript",
              "exec": [
                "function randomString(length=1) {\r",
                "    let randomString = \"\";\r",
                "    for (let i = 0; i < length; i++){\r",
                "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                "    }\r",
                "    return randomString;\r",
                "}\r",
                "\r",
                "STRING_LEN = 200\r",
                "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                "\r",
                "const uuid = require('uuid')\r",
                "let email=uuid()+'@domain.com'\r",
                "pm.environment.set('randomEmail',email)\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
      "name": "API Requests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2022-11-22T09:13:00.403Z",
      "postman_exported_using": "Postman/10.4.2"
    },
    "id": "944d0718-0ce0-43ad-9943-12d5677a528b",
    "name": "Dev Environment",
    "values": [
      {
        "type": "any",
        "value": "5045\n",
        "key": "PORT"
      },
      {
        "type": "any",
        "value": "192.168.56.3",
        "key": "HOST"
      },
      {
        "type": "any",
        "value": "41aeb10f-1551-480b-b014-8f07b761131e@domain.com",
        "key": "randomEmail"
      },
      {
        "type": "any",
        "value": "Petrov",
        "key": "lastNameForTest"
      }
    ]
  },
  "globals": {
    "id": "07660e52-cd43-4131-9473-52b16ecbe6eb",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 5,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 4,
        "pending": 0,
        "failed": 4
      },
      "tests": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 9,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669975935658,
      "completed": 1669975936228
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de6596d3-c6c7-424e-92d4-614c9992c266",
          "httpRequestId": "58150156-d488-490f-928d-778a79d6855a"
        },
        "item": {
          "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
          "name": "Post new Item",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                  "});"
                ],
                "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5045\n",
            "path": [
              "register"
            ],
            "host": [
              "192",
              "168",
              "56",
              "3"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dbd09b55-0aa4-476e-8666-621de33b34ec",
              "system": true
            },
            {
              "key": "Host",
              "value": "192.168.56.3:5045\n",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
        "requestError": {
          "code": "ERR_INVALID_CHAR"
        },
        "assertions": [
          {
            "assertion": "Successful POST request",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Successful POST request",
              "message": "expected undefined to be one of [ 201, 202 ]",
              "stack": "AssertionError: expected undefined to be one of [ 201, 202 ]\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "43040fea-6b46-4830-adcd-a39c4a682615",
          "length": 4,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67a1468f-957d-4dde-80c6-13c2ca48c4b3"
        },
        "item": {
          "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
          "name": "Get Items",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Content test\", function () {\r",
                  "    var lnft = pm.variables.get('lastNameForTest');\r",
                  "    pm.expect(pm.response.text()).to.include(lnft);\r",
                  "});"
                ],
                "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5045\n",
            "path": [
              "register"
            ],
            "host": [
              "192",
              "168",
              "56",
              "3"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9de40d7c-5436-46e8-9809-bee9b6974900",
              "system": true
            },
            {
              "key": "Host",
              "value": "192.168.56.3:5045\n",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
        "requestError": {
          "code": "ERR_INVALID_CHAR"
        },
        "assertions": [
          {
            "assertion": "Status test",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status test",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response time is less than 200ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:2)"
            }
          },
          {
            "assertion": "Content test",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Content test",
              "message": "the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string",
              "stack": "AssertionError: the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string\n   at Object.eval sandbox-script.js:3:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "1f4ce13c-9f70-4d06-bfde-776e3332598b",
          "length": 4,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e40b6c7d-7b77-4d3f-bb4f-c2a248a62929"
        },
        "item": {
          "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
          "name": "Get course",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "getcourse"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test currency value\", function () {\r",
                  "     var jsondata = pm.response.json();\r",
                  "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                  "});"
                ],
                "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5045\n",
            "path": [
              "getcourse"
            ],
            "host": [
              "192",
              "168",
              "56",
              "3"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4eb10467-2818-45ff-bb42-c888f4efe713",
              "system": true
            },
            {
              "key": "Host",
              "value": "192.168.56.3:5045\n",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
        "requestError": {
          "code": "ERR_INVALID_CHAR"
        },
        "assertions": [
          {
            "assertion": "Status test",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status test",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response time is less than 200ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response time is less than 200ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:3)"
            }
          },
          {
            "assertion": "Test currency value",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Test currency value",
              "message": "Unexpected token u in JSON at position 0",
              "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:3:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b0238437-4765-4d27-8b35-ff9ee71fd69b",
          "length": 4,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e9e92c8-5d90-49f4-a184-31ffea41887a"
        },
        "item": {
          "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
          "name": "Post new feedback",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "feedback"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                  "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                  "});"
                ],
                "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                "type": "text/javascript",
                "exec": [
                  "function randomString(length=1) {\r",
                  "    let randomString = \"\";\r",
                  "    for (let i = 0; i < length; i++){\r",
                  "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                  "    }\r",
                  "    return randomString;\r",
                  "}\r",
                  "\r",
                  "STRING_LEN = 200\r",
                  "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                  "\r",
                  "const uuid = require('uuid')\r",
                  "let email=uuid()+'@domain.com'\r",
                  "pm.environment.set('randomEmail',email)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5045\n",
            "path": [
              "feedback"
            ],
            "host": [
              "192",
              "168",
              "56",
              "3"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "51f92788-3bde-4f71-9293-e3ed90e93f05",
              "system": true
            },
            {
              "key": "Host",
              "value": "192.168.56.3:5045\n",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\": \"41aeb10f-1551-480b-b014-8f07b761131e@domain.com\",\r\n    \"msgText\": \"v6pk762t0p6z11p6x2291n0w48gd04plleo3pf94ck99c440fqq4jf8t5xcu6rvd1d3zy87sggm091remhsezqzl6suseot5o870ykkpgq546eoci9rdb5eljqs8wloec198wf712kmrkd9i2otz216a6j3w7vqo038qy01vxvcs38y6nnac4izhy86cokl3j4pombwr\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
        "requestError": {
          "code": "ERR_INVALID_CHAR"
        },
        "assertions": [
          {
            "assertion": "Status test",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status test",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Access-Control-Allow-Origin is present",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Access-Control-Allow-Origin is present",
              "message": "expected response to have header with key 'Access-Control-Allow-Origin'",
              "stack": "AssertionError: expected response to have header with key 'Access-Control-Allow-Origin'\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "code": "ERR_INVALID_CHAR",
          "name": "TypeError",
          "message": "Invalid character in header content [\"Host\"]",
          "stack": "TypeError [ERR_INVALID_CHAR]: Invalid character in header content [\"Host\"]\n    at ClientRequest.setHeader (_http_outgoing.js:533:3)\n    at new ClientRequest (_http_client.js:242:14)\n    at Object.request (http.js:46:10)\n    at Request.start (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:965:32)\n    at Request.write (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1927:10)\n    at end (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:715:18)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:755:9\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1898:5\n    at next (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1214:7)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1202:5\n    at MemoryCookieStore.findCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js:113:3)\n    at CookieJar.getCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1183:9)\n    at CookieJar.getCookieString (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1223:19)\n    at Request.jar (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1882:19)\n    at Immediate._onImmediate (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:745:10)\n    at processImmediate (internal/timers.js:461:21)",
          "checksum": "c5b6362e6ac90ab0b85057bccd7c3890",
          "id": "eabb65e7-9bef-4b9f-851f-62ac79df6b8f",
          "timestamp": 1669975935854,
          "stacktrace": [
            {
              "fileName": "_http_outgoing.js",
              "lineNumber": 533,
              "functionName": "ClientRequest.setHeader",
              "typeName": "ClientRequest",
              "methodName": "setHeader",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "_http_client.js",
              "lineNumber": 242,
              "functionName": "new ClientRequest",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "http.js",
              "lineNumber": 46,
              "functionName": "Object.request",
              "typeName": "Object",
              "methodName": "request",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 965,
              "functionName": "Request.start",
              "typeName": "Request",
              "methodName": "start",
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1927,
              "functionName": "Request.write",
              "typeName": "Request",
              "methodName": "write",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 715,
              "functionName": "end",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 18,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 755,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1898,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1214,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 7,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1202,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js",
              "lineNumber": 113,
              "functionName": "MemoryCookieStore.findCookies",
              "typeName": "MemoryCookieStore",
              "methodName": "findCookies",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1183,
              "functionName": "CookieJar.getCookies",
              "typeName": "CookieJar",
              "methodName": "getCookies",
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1223,
              "functionName": "CookieJar.getCookieString",
              "typeName": "CookieJar",
              "methodName": "getCookieString",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1882,
              "functionName": "Request.jar",
              "typeName": "Request",
              "methodName": "jar",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 745,
              "functionName": "Immediate._onImmediate",
              "typeName": "Immediate",
              "methodName": "_onImmediate",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "internal/timers.js",
              "lineNumber": 461,
              "functionName": "processImmediate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
          "name": "Post new Item",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                  "});"
                ],
                "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de6596d3-c6c7-424e-92d4-614c9992c266",
          "httpRequestId": "58150156-d488-490f-928d-778a79d6855a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Successful POST request",
          "message": "expected undefined to be one of [ 201, 202 ]",
          "stack": "AssertionError: expected undefined to be one of [ 201, 202 ]\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "2d3095dd17388c931730e52f80045031",
          "id": "e96da583-db88-4ac8-9514-148617c2ce7c",
          "timestamp": 1669975935933,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
          "name": "Post new Item",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successful POST request\", function () {\r",
                  "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                  "});"
                ],
                "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "de6596d3-c6c7-424e-92d4-614c9992c266",
          "httpRequestId": "58150156-d488-490f-928d-778a79d6855a",
          "scriptId": "f245089d-bb91-4175-86d3-160a986c3a79",
          "execution": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_CHAR",
          "name": "TypeError",
          "message": "Invalid character in header content [\"Host\"]",
          "stack": "TypeError [ERR_INVALID_CHAR]: Invalid character in header content [\"Host\"]\n    at ClientRequest.setHeader (_http_outgoing.js:533:3)\n    at new ClientRequest (_http_client.js:242:14)\n    at Object.request (http.js:46:10)\n    at Request.start (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:965:32)\n    at Request.end (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1941:10)\n    at end (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:741:14)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:755:9\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1898:5\n    at next (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1214:7)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1202:5\n    at MemoryCookieStore.findCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js:113:3)\n    at CookieJar.getCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1183:9)\n    at CookieJar.getCookieString (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1223:19)\n    at Request.jar (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1882:19)\n    at Immediate._onImmediate (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:745:10)\n    at processImmediate (internal/timers.js:461:21)",
          "checksum": "f4697120ce60a9cd46c056dd4e7cf484",
          "id": "c7fc4f35-0528-4deb-b654-196ec4e96a22",
          "timestamp": 1669975935992,
          "stacktrace": [
            {
              "fileName": "_http_outgoing.js",
              "lineNumber": 533,
              "functionName": "ClientRequest.setHeader",
              "typeName": "ClientRequest",
              "methodName": "setHeader",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "_http_client.js",
              "lineNumber": 242,
              "functionName": "new ClientRequest",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "http.js",
              "lineNumber": 46,
              "functionName": "Object.request",
              "typeName": "Object",
              "methodName": "request",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 965,
              "functionName": "Request.start",
              "typeName": "Request",
              "methodName": "start",
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1941,
              "functionName": "Request.end",
              "typeName": "Request",
              "methodName": "end",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 741,
              "functionName": "end",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 755,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1898,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1214,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 7,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1202,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js",
              "lineNumber": 113,
              "functionName": "MemoryCookieStore.findCookies",
              "typeName": "MemoryCookieStore",
              "methodName": "findCookies",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1183,
              "functionName": "CookieJar.getCookies",
              "typeName": "CookieJar",
              "methodName": "getCookies",
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1223,
              "functionName": "CookieJar.getCookieString",
              "typeName": "CookieJar",
              "methodName": "getCookieString",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1882,
              "functionName": "Request.jar",
              "typeName": "Request",
              "methodName": "jar",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 745,
              "functionName": "Immediate._onImmediate",
              "typeName": "Immediate",
              "methodName": "_onImmediate",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "internal/timers.js",
              "lineNumber": 461,
              "functionName": "processImmediate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
          "name": "Get Items",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Content test\", function () {\r",
                  "    var lnft = pm.variables.get('lastNameForTest');\r",
                  "    pm.expect(pm.response.text()).to.include(lnft);\r",
                  "});"
                ],
                "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "43040fea-6b46-4830-adcd-a39c4a682615",
          "length": 4,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67a1468f-957d-4dde-80c6-13c2ca48c4b3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status test",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "1b8f8d435c801c8ed492a857d5d2914f",
          "id": "6207f935-0a36-4987-bbd1-ffacf756945d",
          "timestamp": 1669975936024,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
          "name": "Get Items",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Content test\", function () {\r",
                  "    var lnft = pm.variables.get('lastNameForTest');\r",
                  "    pm.expect(pm.response.text()).to.include(lnft);\r",
                  "});"
                ],
                "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "43040fea-6b46-4830-adcd-a39c4a682615",
          "length": 4,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67a1468f-957d-4dde-80c6-13c2ca48c4b3",
          "scriptId": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
          "execution": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response time is less than 200ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "66ebb2f596ab144e9e3305a1d373820a",
          "id": "489ae6db-22b5-46f7-8d1b-4ded7ab3e0b7",
          "timestamp": 1669975936029,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
          "name": "Get Items",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Content test\", function () {\r",
                  "    var lnft = pm.variables.get('lastNameForTest');\r",
                  "    pm.expect(pm.response.text()).to.include(lnft);\r",
                  "});"
                ],
                "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "43040fea-6b46-4830-adcd-a39c4a682615",
          "length": 4,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67a1468f-957d-4dde-80c6-13c2ca48c4b3",
          "scriptId": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
          "execution": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Content test",
          "message": "the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string",
          "stack": "AssertionError: the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string\n   at Object.eval sandbox-script.js:3:2)",
          "checksum": "5822ff73ea8a23016d4e3351d23485cc",
          "id": "c28d6715-89ea-4729-b694-bac811ba41d7",
          "timestamp": 1669975936034,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
          "name": "Get Items",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "register"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Content test\", function () {\r",
                  "    var lnft = pm.variables.get('lastNameForTest');\r",
                  "    pm.expect(pm.response.text()).to.include(lnft);\r",
                  "});"
                ],
                "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "43040fea-6b46-4830-adcd-a39c4a682615",
          "length": 4,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "67a1468f-957d-4dde-80c6-13c2ca48c4b3",
          "scriptId": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
          "execution": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_CHAR",
          "name": "TypeError",
          "message": "Invalid character in header content [\"Host\"]",
          "stack": "TypeError [ERR_INVALID_CHAR]: Invalid character in header content [\"Host\"]\n    at ClientRequest.setHeader (_http_outgoing.js:533:3)\n    at new ClientRequest (_http_client.js:242:14)\n    at Object.request (http.js:46:10)\n    at Request.start (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:965:32)\n    at Request.end (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1941:10)\n    at end (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:741:14)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:755:9\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1898:5\n    at next (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1214:7)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1202:5\n    at MemoryCookieStore.findCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js:113:3)\n    at CookieJar.getCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1183:9)\n    at CookieJar.getCookieString (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1223:19)\n    at Request.jar (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1882:19)\n    at Immediate._onImmediate (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:745:10)\n    at processImmediate (internal/timers.js:461:21)",
          "checksum": "f4697120ce60a9cd46c056dd4e7cf484",
          "id": "1c1c0cbe-23c6-44f5-82cd-2d49a42c9b20",
          "timestamp": 1669975936063,
          "stacktrace": [
            {
              "fileName": "_http_outgoing.js",
              "lineNumber": 533,
              "functionName": "ClientRequest.setHeader",
              "typeName": "ClientRequest",
              "methodName": "setHeader",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "_http_client.js",
              "lineNumber": 242,
              "functionName": "new ClientRequest",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "http.js",
              "lineNumber": 46,
              "functionName": "Object.request",
              "typeName": "Object",
              "methodName": "request",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 965,
              "functionName": "Request.start",
              "typeName": "Request",
              "methodName": "start",
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1941,
              "functionName": "Request.end",
              "typeName": "Request",
              "methodName": "end",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 741,
              "functionName": "end",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 755,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1898,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1214,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 7,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1202,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js",
              "lineNumber": 113,
              "functionName": "MemoryCookieStore.findCookies",
              "typeName": "MemoryCookieStore",
              "methodName": "findCookies",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1183,
              "functionName": "CookieJar.getCookies",
              "typeName": "CookieJar",
              "methodName": "getCookies",
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1223,
              "functionName": "CookieJar.getCookieString",
              "typeName": "CookieJar",
              "methodName": "getCookieString",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1882,
              "functionName": "Request.jar",
              "typeName": "Request",
              "methodName": "jar",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 745,
              "functionName": "Immediate._onImmediate",
              "typeName": "Immediate",
              "methodName": "_onImmediate",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "internal/timers.js",
              "lineNumber": 461,
              "functionName": "processImmediate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
          "name": "Get course",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "getcourse"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test currency value\", function () {\r",
                  "     var jsondata = pm.response.json();\r",
                  "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                  "});"
                ],
                "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "1f4ce13c-9f70-4d06-bfde-776e3332598b",
          "length": 4,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e40b6c7d-7b77-4d3f-bb4f-c2a248a62929"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status test",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "ce911fc2d2721318931c3cc433ea64b8",
          "id": "e1497808-19bf-49e2-9fd4-d7a8f04157f1",
          "timestamp": 1669975936088,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
          "name": "Get course",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "getcourse"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test currency value\", function () {\r",
                  "     var jsondata = pm.response.json();\r",
                  "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                  "});"
                ],
                "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "1f4ce13c-9f70-4d06-bfde-776e3332598b",
          "length": 4,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e40b6c7d-7b77-4d3f-bb4f-c2a248a62929",
          "scriptId": "e9d30a28-98cd-4a32-8325-41fdff576120",
          "execution": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response time is less than 200ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "884aad21854903323d6186109ef344c6",
          "id": "bbec68a6-7b0f-4c38-b9ed-75fa2492c289",
          "timestamp": 1669975936091,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
          "name": "Get course",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "getcourse"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test currency value\", function () {\r",
                  "     var jsondata = pm.response.json();\r",
                  "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                  "});"
                ],
                "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "1f4ce13c-9f70-4d06-bfde-776e3332598b",
          "length": 4,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e40b6c7d-7b77-4d3f-bb4f-c2a248a62929",
          "scriptId": "e9d30a28-98cd-4a32-8325-41fdff576120",
          "execution": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Test currency value",
          "message": "Unexpected token u in JSON at position 0",
          "stack": "JSONError: Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "825a59fb50453772cf122993b297fd46",
          "id": "d8b156e9-6ff6-4d50-9902-4f92d59410c9",
          "timestamp": 1669975936094,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
          "name": "Get course",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "getcourse"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response time is less than 200ms\", () => {\r",
                  "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Test currency value\", function () {\r",
                  "     var jsondata = pm.response.json();\r",
                  "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                  "});"
                ],
                "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "1f4ce13c-9f70-4d06-bfde-776e3332598b",
          "length": 4,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e40b6c7d-7b77-4d3f-bb4f-c2a248a62929",
          "scriptId": "e9d30a28-98cd-4a32-8325-41fdff576120",
          "execution": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_CHAR",
          "name": "TypeError",
          "message": "Invalid character in header content [\"Host\"]",
          "stack": "TypeError [ERR_INVALID_CHAR]: Invalid character in header content [\"Host\"]\n    at ClientRequest.setHeader (_http_outgoing.js:533:3)\n    at new ClientRequest (_http_client.js:242:14)\n    at Object.request (http.js:46:10)\n    at Request.start (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:965:32)\n    at Request.write (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1927:10)\n    at end (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:715:18)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:755:9\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1898:5\n    at next (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1214:7)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1202:5\n    at MemoryCookieStore.findCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js:113:3)\n    at CookieJar.getCookies (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1183:9)\n    at CookieJar.getCookieString (/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js:1223:19)\n    at Request.jar (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:1882:19)\n    at Immediate._onImmediate (/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js:745:10)\n    at processImmediate (internal/timers.js:461:21)",
          "checksum": "c5b6362e6ac90ab0b85057bccd7c3890",
          "id": "bdebf3f3-6d4e-4d50-96a2-ad1003e115c9",
          "timestamp": 1669975936186,
          "stacktrace": [
            {
              "fileName": "_http_outgoing.js",
              "lineNumber": 533,
              "functionName": "ClientRequest.setHeader",
              "typeName": "ClientRequest",
              "methodName": "setHeader",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "_http_client.js",
              "lineNumber": 242,
              "functionName": "new ClientRequest",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 14,
              "native": false
            },
            {
              "fileName": "http.js",
              "lineNumber": 46,
              "functionName": "Object.request",
              "typeName": "Object",
              "methodName": "request",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 965,
              "functionName": "Request.start",
              "typeName": "Request",
              "methodName": "start",
              "columnNumber": 32,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1927,
              "functionName": "Request.write",
              "typeName": "Request",
              "methodName": "write",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 715,
              "functionName": "end",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 18,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 755,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1898,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1214,
              "functionName": "next",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 7,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1202,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 5,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/memstore.js",
              "lineNumber": 113,
              "functionName": "MemoryCookieStore.findCookies",
              "typeName": "MemoryCookieStore",
              "methodName": "findCookies",
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1183,
              "functionName": "CookieJar.getCookies",
              "typeName": "CookieJar",
              "methodName": "getCookies",
              "columnNumber": 9,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/node_modules/tough-cookie/lib/cookie.js",
              "lineNumber": 1223,
              "functionName": "CookieJar.getCookieString",
              "typeName": "CookieJar",
              "methodName": "getCookieString",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 1882,
              "functionName": "Request.jar",
              "typeName": "Request",
              "methodName": "jar",
              "columnNumber": 19,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-request/request.js",
              "lineNumber": 745,
              "functionName": "Immediate._onImmediate",
              "typeName": "Immediate",
              "methodName": "_onImmediate",
              "columnNumber": 10,
              "native": false
            },
            {
              "fileName": "internal/timers.js",
              "lineNumber": 461,
              "functionName": "processImmediate",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
          "name": "Post new feedback",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "feedback"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                  "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                  "});"
                ],
                "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                "type": "text/javascript",
                "exec": [
                  "function randomString(length=1) {\r",
                  "    let randomString = \"\";\r",
                  "    for (let i = 0; i < length; i++){\r",
                  "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                  "    }\r",
                  "    return randomString;\r",
                  "}\r",
                  "\r",
                  "STRING_LEN = 200\r",
                  "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                  "\r",
                  "const uuid = require('uuid')\r",
                  "let email=uuid()+'@domain.com'\r",
                  "pm.environment.set('randomEmail',email)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b0238437-4765-4d27-8b35-ff9ee71fd69b",
          "length": 4,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e9e92c8-5d90-49f4-a184-31ffea41887a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status test",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "db1b84f4629ff5b345602812166f09b7",
          "id": "aa0047f3-d117-473e-8203-cff56440b80f",
          "timestamp": 1669975936209,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
          "name": "Post new feedback",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "feedback"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                  "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                  "});"
                ],
                "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                "type": "text/javascript",
                "exec": [
                  "function randomString(length=1) {\r",
                  "    let randomString = \"\";\r",
                  "    for (let i = 0; i < length; i++){\r",
                  "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                  "    }\r",
                  "    return randomString;\r",
                  "}\r",
                  "\r",
                  "STRING_LEN = 200\r",
                  "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                  "\r",
                  "const uuid = require('uuid')\r",
                  "let email=uuid()+'@domain.com'\r",
                  "pm.environment.set('randomEmail',email)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b0238437-4765-4d27-8b35-ff9ee71fd69b",
          "length": 4,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e9e92c8-5d90-49f4-a184-31ffea41887a",
          "scriptId": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
          "execution": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Access-Control-Allow-Origin is present",
          "message": "expected response to have header with key 'Access-Control-Allow-Origin'",
          "stack": "AssertionError: expected response to have header with key 'Access-Control-Allow-Origin'\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "8fa1ef10f561ba1cbb651c619f2a251d",
          "id": "91663a3a-0d5c-4178-a504-5c32247da38d",
          "timestamp": 1669975936214,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
          "name": "Post new feedback",
          "request": {
            "url": {
              "port": "{{PORT}}",
              "path": [
                "feedback"
              ],
              "host": [
                "{{HOST}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status test\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                  "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                  "});"
                ],
                "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                "type": "text/javascript",
                "exec": [
                  "function randomString(length=1) {\r",
                  "    let randomString = \"\";\r",
                  "    for (let i = 0; i < length; i++){\r",
                  "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                  "    }\r",
                  "    return randomString;\r",
                  "}\r",
                  "\r",
                  "STRING_LEN = 200\r",
                  "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                  "\r",
                  "const uuid = require('uuid')\r",
                  "let email=uuid()+'@domain.com'\r",
                  "pm.environment.set('randomEmail',email)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a"
          },
          "item": [
            {
              "id": "89947afa-c212-4ce9-94b8-0a864f8baa80",
              "name": "Post new Item",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n\t   \"firstName\": \"Alex\",\r\n\t   \"lastName\": \"Petrov\",\r\n\t   \"claim\": \"My problem\",\r\n\t   \"phoneNumber\": \"+30 (727) 827-6534\",\r\n\t   \"email\": \"6702727@gmail.com\",\r\n\t   \"claimdetails\": \"aaabbbcccddd\",\r\n\t   \"age\": 35,\r\n\t   \"priceusd\": 39.5,\r\n\t   \"course\": 39.5,\r\n\t   \"priceuah\": 900\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f245089d-bb91-4175-86d3-160a986c3a79",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successful POST request\", function () {\r",
                      "    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
                      "});"
                    ],
                    "_lastExecutionId": "03eb94a8-e79f-4d54-adce-ed5f85b5bcc2"
                  }
                }
              ]
            },
            {
              "id": "61d2a701-df24-4090-98ea-e0e8fbf47fbe",
              "name": "Get Items",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b3e0b1c3-1d07-4abf-82a6-1c0e47b0019c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Content test\", function () {\r",
                      "    var lnft = pm.variables.get('lastNameForTest');\r",
                      "    pm.expect(pm.response.text()).to.include(lnft);\r",
                      "});"
                    ],
                    "_lastExecutionId": "8963f7b0-dad4-4551-9437-3bddb3100e7b"
                  }
                }
              ]
            },
            {
              "id": "3af58e37-ac74-44ea-8d31-8d774a285a5d",
              "name": "Get course",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "getcourse"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e9d30a28-98cd-4a32-8325-41fdff576120",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Response time is less than 200ms\", () => {\r",
                      "  pm.expect(pm.response.responseTime).to.be.below(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Test currency value\", function () {\r",
                      "     var jsondata = pm.response.json();\r",
                      "    pm.expect(jsondata.currency).to.eql(\"USD\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "8f4342ab-01dd-4640-bc8d-aa002d4b6928"
                  }
                }
              ]
            },
            {
              "id": "6f784910-802d-481b-b7e3-615ee7d44bc5",
              "name": "Post new feedback",
              "request": {
                "url": {
                  "port": "{{PORT}}",
                  "path": [
                    "feedback"
                  ],
                  "host": [
                    "{{HOST}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\": \"{{randomEmail}}\",\r\n    \"msgText\": \"{{randomString}}\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status test\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Access-Control-Allow-Origin is present\", function () {\r",
                      "    pm.response.to.have.header(\"Access-Control-Allow-Origin\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "319b593d-3e9f-42ad-9e54-58a984ea2e77",
                    "type": "text/javascript",
                    "exec": [
                      "function randomString(length=1) {\r",
                      "    let randomString = \"\";\r",
                      "    for (let i = 0; i < length; i++){\r",
                      "        randomString += pm.variables.replaceIn(\"{{$randomAlphaNumeric}}\");\r",
                      "    }\r",
                      "    return randomString;\r",
                      "}\r",
                      "\r",
                      "STRING_LEN = 200\r",
                      "pm.variables.set('randomString', randomString(STRING_LEN));\r",
                      "\r",
                      "const uuid = require('uuid')\r",
                      "let email=uuid()+'@domain.com'\r",
                      "pm.environment.set('randomEmail',email)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "3fe18bd5-07e0-404f-85d3-da2b771f7319"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "af05367f-ee30-44eb-9d2f-4efcb53e322a",
            "name": "API Requests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b0238437-4765-4d27-8b35-ff9ee71fd69b",
          "length": 4,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e9e92c8-5d90-49f4-a184-31ffea41887a",
          "scriptId": "c50d1653-cbc4-44e7-82ef-656d07ba83b3",
          "execution": "cb7ebb8a-f3f8-416c-a1a1-20010d60c1bf"
        }
      }
    ],
    "error": null
  }
}